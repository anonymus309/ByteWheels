package com.bytemark.bytewheels.hibernate.model;


import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Orders generated by hbm2java
 */
@Entity
@Table(name="ORDERS"
    ,schema="PUBLIC"
    ,catalog="BYTEWHEELS"
)
public class Orders  {


     private Integer orderId;
     private Users users;
     private Vehicles vehicles;
     private Date pickUpDate;
     private Date dropOffDate;
     private int rentCost;
     private boolean processed;
     private boolean picked;
     private boolean returned;
     private boolean paid;

    public Orders() {
    }

    public Orders(Users users, Vehicles vehicles, Date pickUpDate, Date dropOffDate, int rentCost, boolean processed, boolean picked, boolean returned, boolean paid) {
       this.users = users;
       this.vehicles = vehicles;
       this.pickUpDate = pickUpDate;
       this.dropOffDate = dropOffDate;
       this.rentCost = rentCost;
       this.processed = processed;
       this.picked = picked;
       this.returned = returned;
       this.paid = paid;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="ORDER_ID", unique=true, nullable=false)
    public Integer getOrderId() {
        return this.orderId;
    }
    
    public void setOrderId(Integer orderId) {
        this.orderId = orderId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="USER_ID", nullable=false)
    public Users getUsers() {
        return this.users;
    }
    
    public void setUsers(Users users) {
        this.users = users;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="VEHICLE_ID", nullable=false)
    public Vehicles getVehicles() {
        return this.vehicles;
    }
    
    public void setVehicles(Vehicles vehicles) {
        this.vehicles = vehicles;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="PICK_UP_DATE", nullable=false, length=23)
    public Date getPickUpDate() {
        return this.pickUpDate;
    }
    
    public void setPickUpDate(Date pickUpDate) {
        this.pickUpDate = pickUpDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="DROP_OFF_DATE", nullable=false, length=23)
    public Date getDropOffDate() {
        return this.dropOffDate;
    }
    
    public void setDropOffDate(Date dropOffDate) {
        this.dropOffDate = dropOffDate;
    }

    
    @Column(name="RENT_COST", nullable=false)
    public int getRentCost() {
        return this.rentCost;
    }
    
    public void setRentCost(int rentCost) {
        this.rentCost = rentCost;
    }

    
    @Column(name="PROCESSED", nullable=false)
    public boolean isProcessed() {
        return this.processed;
    }
    
    public void setProcessed(boolean processed) {
        this.processed = processed;
    }

    
    @Column(name="PICKED", nullable=false)
    public boolean isPicked() {
        return this.picked;
    }
    
    public void setPicked(boolean picked) {
        this.picked = picked;
    }

    
    @Column(name="RETURNED", nullable=false)
    public boolean isReturned() {
        return this.returned;
    }
    
    public void setReturned(boolean returned) {
        this.returned = returned;
    }

    
    @Column(name="PAID", nullable=false)
    public boolean isPaid() {
        return this.paid;
    }
    
    public void setPaid(boolean paid) {
        this.paid = paid;
    }

	@Override
	public String toString() {
		return "Orders [orderId=" + orderId + ", users=" + users + ", vehicles=" + vehicles + ", pickUpDate="
				+ pickUpDate + ", dropOffDate=" + dropOffDate + ", rentCost=" + rentCost + ", processed=" + processed
				+ ", picked=" + picked + ", returned=" + returned + ", paid=" + paid + "]";
	}




}


